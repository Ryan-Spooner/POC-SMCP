# .augment-guidelines
# AI Assistant Rules for POC-SMCP Project
# These workspace-specific rules take precedence over any global settings.

## Project Context
- This is the POC-SMCP project: a proof-of-concept for a secure marketplace for vetted MCP servers
- Focus on Cloudflare-based hosting infrastructure and security-first design
- Current phase: POC development with emphasis on Streamable HTTP transport protocol
- Target: Building secure AI-assisted development practices

## Memory Bank System
- Always check and update memory-bank files when working on tasks
- Core files: productContext.md, activeContext.md, progress.md, product-backlog.md, decisionLog.md, systemPatterns.md
- Update strategies: APPEND to logs/decisions, REPLACE_SECTION for dynamic states using ## headers
- Keep memory-bank files current and cross-referenced

## Development Practices

- Use package managers (npm, pip, cargo, etc.) instead of manually editing dependency files
- Always make a detailed plan before taking any action
- Search for information and use codebase-retrieval before making edits
- Focus on security-first design patterns for AI-assisted development
- Document all significant technical decisions in decisionLog.md
- Update progress.md when completing tasks or discovering new requirements

## Coding Standards
- Prefer TypeScript for new JavaScript code
- Use Python 3.11+ features and type hints
- Follow security best practices for MCP server development
- Implement proper error handling and logging
- Write tests for new functionality before implementation
- Use descriptive variable names and avoid inline comments

## Security Requirements
- Validate all inputs from MCP servers
- Implement proper authentication and authorization
- Use secure communication protocols (HTTPS, WSS)
- Follow OWASP guidelines for web application security
- Document security considerations in systemPatterns.md
- Regular dependency scanning and updates

## Cloudflare Integration
- Use Cloudflare Workers for serverless functions
- Implement proper rate limiting and DDoS protection
- Utilize Cloudflare's security features (WAF, Bot Management)
- Follow Cloudflare best practices for performance optimization
- Document Cloudflare-specific patterns and configurations

## Memory Bank Templates
- Template files for memory-bank initialization are maintained separately
- See memory-bank directory for file structure and content templates
- Use initialization scripts for creating new memory-bank files when needed
